class Solution {
public:
    int findMaxLength(std::vector<int>& nums) {
        int maxLength = 0;
        int prefixSum = 0;
        std::unordered_map<int, int> prefixSumMap;
        prefixSumMap[0] = -1;

        for (int i = 0; i < nums.size(); ++i) {
            prefixSum += (nums[i] == 0) ? -1 : 1;

            if (prefixSumMap.find(prefixSum) != prefixSumMap.end()) {
                maxLength = std::max(maxLength, i - prefixSumMap[prefixSum]);
            } else {
                prefixSumMap[prefixSum] = i;
            }
        }

        return maxLength;
    }
};

    
