class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        unordered_map<int, int> mp;
        mp[0] = 1;  // base case: one prefix sum with remainder 0
        
        int prefix_sum = 0;
        int count = 0;

        for (int num : nums) {
            prefix_sum += num;

            int rem = prefix_sum % k;
            if (rem < 0)
                rem += k;  // handle negative remainders

            if (mp.find(rem) != mp.end())
                count += mp[rem];

            mp[rem]++;
        }

        return count;
    }
};
